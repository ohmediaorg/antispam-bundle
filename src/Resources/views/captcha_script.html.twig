<script>
let {{ boolean }} = false;

function {{ callback }}() {
  {{ boolean }} = true;
}

function {{ promise }}(container, parameters) {
  return new Promise((resolve) => {
    let interval = setInterval(() => {
      if ({{ boolean }}) {
        clearInterval(interval);

        const widgetId = grecaptcha.render(container, parameters);

        resolve({
          reset() {
            return grecaptcha.reset(widgetId);
          },

          getResponse() {
            return grecaptcha.getResponse(widgetId);
          },
        });
      }
    }, 100);
  });
}
</script>

{% if constant('OHMedia\\AntispamBundle\\DependencyInjection\\Configuration::CAPTCHA_TYPE_HCAPTCHA') == type %}
<script src="https://js.hcaptcha.com/1/api.js?onload={{ callback }}&render=explicit&recaptchacompat=on" async defer></script>
{% elseif constant('OHMedia\\AntispamBundle\\DependencyInjection\\Configuration::CAPTCHA_TYPE_RECAPTCHA') == type %}
<script src="https://www.google.com/recaptcha/api.js?onload={{ callback }}&render=explicit"></script>
{% endif %}
